security:
    password_hashers:
        App\Entity\User:
            algorithm: plaintext

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login_check
            stateless: true
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
       
        api_doc:
            pattern: ^/api/doc
            stateless: true
            security: false

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    access_control:
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api/users/profile, roles: ROLE_USER }
        - { path: ^/api/users/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
